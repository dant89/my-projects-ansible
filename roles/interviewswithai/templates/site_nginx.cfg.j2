# {{ site_name }}

server {
    listen 80;
    listen [::]:80;

    server_name {{ server_name }} www.{{ server_name }};

    # redirects both www and non-www to https
    return 301 https://{{ server_name }}$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl on;
    ssl_certificate {{ ssl_cert_location }};
    ssl_certificate_key {{ ssl_cert_key_location }};

    server_name www.{{ server_name }};

    # redirects www to non-www.
    return 301 https://{{ server_name }}$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    root {{ root_dir }};
    server_name {{ server_name }};

    ssl on;
    ssl_certificate {{ ssl_cert_location }};
    ssl_certificate_key {{ ssl_cert_key_location }};

    access_log /var/log/nginx/{{ site_name }}.log;
    error_log /var/log/nginx/{{ site_name }}_error.log notice;

    index index.php;

    location = /favicon.ico {
            log_not_found off;
            access_log off;
    }

    location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
    }

    location / {
            # This is cool because no php is touched for static content.
            # include the "?$args" part so non-default permalinks doesn't break when using query string
            try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
            #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
            fastcgi_pass unix:/run/php/php7.2-fpm.sock;
            include fastcgi_params;
            fastcgi_intercept_errors on;
            #The following parameter can be also included in fastcgi_params file
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            log_not_found off;
    }
}
